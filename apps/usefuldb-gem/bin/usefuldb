#!/usr/bin/env ruby

require 'usefuldb'
require 'optparse'

#####################################################
def addColour(text, colour_code)
  "\e[#{colour_code}m#{text}\e[0m"
end

def red(text); addColour(text, 31); end
def green(text); addColour(text, 32); end
def yellow(text); addColour(text, 33); end
def blue(text); addColour(text, 34); end
#####################################################

options = {}
optparse = nil

# Setup the system for use
UsefulDB.setup

begin
  optparse = OptionParser.new do |opts|
    
    opts.banner = <<-WELCOME
UsefulDB - a simple command and URL database (#{UsefulDB::Version})

   Useage:  usefuldb <searchtag1> <searchtag2> .. <searchtagN>

WELCOME
  
    opts.on('-a', '--add', "Add an entry to the database") do |arg|
      options[:a] = arg
    end
    
    opts.on('-d', '--delete', "Delete an entry from the database") do |arg|
      options[:d] = arg
    end
    
    opts.on('-l', '--list', "List all entries in the database") do |arg|
      options[:l] = arg
    end
    
    opts.on('-v', '--verbose', "Runs the system in verbose mode") do |arg|
      options[:v] = arg
    end
    
    opts.on('-h', '--help', "Print out this message") do |arg|
      puts opts
      exit
    end
    
  end.parse!
rescue OptionParser::InvalidOption => e
  puts e.message + "\n\nUseage: usefuldb -h or --help for help using the system"
  exit()
end

#############################################################################

# Checking for flag parameters
if options.empty?
  # No parameters of any kind were passed
  if ARGV.empty?
    puts "Useage: usefuldb -h or --help for help using the system"
    exit()
  
  # At least one non flag parameter was passed
  else
    puts green("Launching the search system:")
    UsefulDB::GUI.search(ARGV)
  end

# Some flags parameters were passed
else
  #puts options
  
  if options[:a] # The -a or --add flag check
    puts green("Launching the add system:")
    UsefulDB::GUI.add(options)
  
  elsif options[:l]
    puts green("Launching the list system:")
    UsefulDB::GUI.list
    
  elsif options[:d] # The -d or --delete flag check
    puts "Run the delete system:"
    UsefulDB::GUI.remove(options)
    
  end
end


